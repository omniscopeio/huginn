# ==== Required configuration settings for Huginn ====

# Replace the following with the output from "rake secret"
# APP_SECRET_TOKEN=SECRET

# This is the domain where your Huginn instance will be running. The default should work
# for development, but it needs to be changed to your Huginn domain when you deploy to a
# production environment (e.g., yourdomain.com, possibly including a port).
DOMAIN=huginn.omniscope.io

# Optionally set an asset host
# ASSET_HOST=http://assets.example.com

############################
#      Database Setup      #
############################

# DATABASE_ADAPTER=postgresql
# DATABASE_ENCODING=utf8
# DATABASE_RECONNECT=true
# DATABASE_NAME=huginn_development
# DATABASE_POOL=10
# DATABASE_PASSWORD=''
# DATABASE_USERNAME='readwl'
# DATABASE_HOST='tildewill-huginn-1762203'
# DATABASE_PORT=3306
# DATABASE_SOCKET=/tmp/mysql.sock

# MySQL only: If you are running a MySQL server >=5.5.3, you should
# set DATABASE_ENCODING to utf8mb4 instead of utf8 so that the
# database can hold 4-byte UTF-8 characters like emoji.
# DATABASE_ENCODING=utf8mb4

# ==== Additional required production settings ====

# Configure Rails environment.  This should only be needed in production and may cause errors in development.
RAILS_ENV=production
RACK_ENV=production

# Should Rails force all requests to use SSL?
FORCE_SSL=true

############################
#     Allowing Signups     #
############################

# This invitation code will be required for users to signup with your Huginn installation.
# You can see its use in user.rb.  PLEASE CHANGE THIS!
# INVITATION_CODE=try-huginn

# If you don't want to require users to have an invitation code, set this to true
SKIP_INVITATION_CODE=true

# Set to 'true' if you would prefer new users to start with a default set of agents
IMPORT_DEFAULT_SCENARIO_FOR_ALL_USERS=true

# Users can be given a default set of agents to get them started
# You can override this scenario with your own scenario via file path or URL
DEFAULT_SCENARIO_FILE=data/success_scenario.json

#############################
#    Email Configuration    #
#############################

# Outgoing email settings.  To use Gmail or Google Apps, put your Google Apps domain or gmail.com
# as the SMTP_DOMAIN and your Gmail username and password as the SMTP_USER_NAME and SMTP_PASSWORD.
#
# PLEASE NOTE: In order to enable emails locally (e.g., when not in the production Rails environment),
# you must also set SEND_EMAIL_IN_DEVELOPMENT to true below.
#
# If you have trouble with port 587 on Gmail, you can also try setting
# SMTP_AUTHENTICATION to login and the SMTP_PORT to 465.

# SMTP_DOMAIN=CONFIGURED-BY-HEROKU
# SMTP_USER_NAME=CONFIGURED-BY-HEROKU
# SMTP_PASSWORD=CONFIGURED-BY-HEROKU
# SMTP_SERVER=CONFIGURED-BY-HEROKU
# SMTP_PORT=CONFIGURED-BY-HEROKU
# SMTP_AUTHENTICATION=CONFIGURED-BY-HEROKU
# SMTP_ENABLE_STARTTLS_AUTO=CONFIGURED-BY-HEROKU

# The address from which system emails will appear to be sent.
EMAIL_FROM_ADDRESS=huginn@omniscope.io

###########################
#      Agent Logging      #
###########################

# Number of lines of log messages to keep per Agent
AGENT_LOG_LENGTH=50

########################################################################################################
#    OAuth Configuration                                                                               #
#  More information at the wiki: https://github.com/cantino/huginn/wiki/Configuring-OAuth-applications #
########################################################################################################

# LIFX_CLIENT_ID=SECRET
# LIFX_CLIENT_SECRET=SECRET

# TWITTER_OAUTH_KEY=SECRET
# TWITTER_OAUTH_SECRET=SECRET

THIRTY_SEVEN_SIGNALS_OAUTH_KEY=
THIRTY_SEVEN_SIGNALS_OAUTH_SECRET=

GITHUB_OAUTH_KEY=
GITHUB_OAUTH_SECRET=

TUMBLR_OAUTH_KEY=
TUMBLR_OAUTH_SECRET=

DROPBOX_OAUTH_KEY=
DROPBOX_OAUTH_SECRET=

WUNDERLIST_OAUTH_KEY=
WUNDERLIST_OAUTH_SECRET=

#############################
#  AWS and Mechanical Turk  #
#############################

# AWS Credentials for MTurk
AWS_ACCESS_KEY_ID="your aws access key id"
AWS_ACCESS_KEY="your aws access key"

# Set AWS_SANDBOX to true if you're developing Huginn code.
AWS_SANDBOX=false

#########################
# Additional Agent gems #
#########################

# Agent gems can be added to Huginn by specifying them in a comma separated
# list, the gem version and arguments for the gem command are optional.
# When not providing a git(hub) repository the gem needs to be published to
# https://rubygems.org.
# Check http://bundler.io/v1.11/git.html for a list of valid arguments.
#
# Configuration examples:
#
# ADDITIONAL_GEMS=huginn_nlp_agents,test_agent
# ADDITIONAL_GEMS=huginn_nlp_agents(~> 0.2.1),test_agent
# ADDITIONAL_GEMS=huginn_nlp_agents(git: https://github.com/kreuzwerker/DKT.huginn_nlp_agents.git),test_agent
# ADDITIONAL_GEMS=huginn_nlp_agents(github: kreuzwerker/DKT.huginn_nlp_agents),test_agent
# ADDITIONAL_GEMS=huginn_nlp_agents(~> 0.2.1, git: https://github.com/kreuzwerker/DKT.huginn_nlp_agents.git),test_agent
ADDITIONAL_GEMS=huginn_nlp_agents(github: kreuzwerker/DKT.huginn_nlp_agents)

########################
#   Various Settings   #
########################

# Specify the HTTP backend library for Faraday, commonly used by
# WebsiteAgent, RssAgent and PostAgent.  You can change this depending
# on the performance and stability you need for your service.  Any
# choice other than "typhoeus", "net_http", or "em_http" should
# require you to bundle a corresponding gem via Gemfile.
FARADAY_HTTP_BACKEND=typhoeus

# Specify the default User-Agent header value for HTTP requests made
# by Agents that allow overriding the User-Agent header value.
DEFAULT_HTTP_USER_AGENT="Huginn by Omniscope - https://huginn.omniscope.io/"

# Allow JSONPath eval expresions. i.e., $..price[?(@ < 20)]
# You should not allow this on a shared Huginn box because it is not secure.
ALLOW_JSONPATH_EVAL=false

# Enable this setting to allow insecure Agents like the ShellCommandAgent.  Only do this
# when you trust everyone using your Huginn installation.
ENABLE_INSECURE_AGENTS=false

# Enable this setting to allow second precision schedule in
# SchedulerAgent.  By default, the use of the "second" field is
# restricted so that any value other than a single zero (which means
# "on the minute") is disallowed to prevent abuse of service.
ENABLE_SECOND_PRECISION_SCHEDULE=false

# Specify the scheduler frequency in seconds (default: 0.3).
# Increasing this value will help reduce the use of system resources
# at the expense of time accuracy.
SCHEDULER_FREQUENCY=0.3

# Specify the frequency with which the scheduler checks for and cleans up expired events.
# You can use `m` for minutes, `h` for hours, and `d` for days.
EVENT_EXPIRATION_CHECK=6h

# Use Graphviz for generating diagrams instead of using Google Chart
# Tools.  Specify a dot(1) command path built with SVG support
# enabled.
USE_GRAPHVIZ_DOT=dot

# Timezone. Use `rake time:zones:local` or `rake time:zones:all` to get your zone name
TIMEZONE="Pacific Time (US & Canada)"

# Number of failed jobs to keep in the database
FAILED_JOBS_TO_KEEP=100

# Maximum runtime of background jobs in minutes
DELAYED_JOB_MAX_RUNTIME=2

# Amount of seconds for delayed_job to sleep before checking for new jobs
DELAYED_JOB_SLEEP_DELAY=0

############################
#         PAYMENTS         #
############################
# STRIPE_SECRET_KEY=SECRET
# STRIPE_PUBLISHABLE_KEY=SECRET

############################
#        MONITORING        #
############################
# NEW_RELIC_LICENSE_KEY=SECRET
# NEW_RELIC_LOG=CONFIGURED-BY-HEROKU

############################
#         HOSTING          #
############################
ON_HEROKU=true
PROCFILE_PATH=deployment/heroku/Procfile.heroku
